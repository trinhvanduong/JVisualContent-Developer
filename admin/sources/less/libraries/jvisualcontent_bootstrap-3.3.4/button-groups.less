//
// Button groups
// --------------------------------------------------

@{main_prefix} {
  // Make the div behave like a button
  .@{prefix}btn-group,
  .@{prefix}btn-group-vertical {
    position: relative;
    display: inline-block;
    vertical-align: middle; // match .btn alignment given font-size hack above
    > .@{prefix}btn {
      position: relative;
      float: left;
      // Bring the "active" button to the front
      &:hover,
      &:focus,
      &:active,
      &.@{prefix}active {
        z-index: 2;
      }
    }
  }

  // Prevent double borders when buttons are next to each other
  .@{prefix}btn-group {
    .@{prefix}btn + .@{prefix}btn,
    .@{prefix}btn + .@{prefix}btn-group,
    .@{prefix}btn-group + .@{prefix}btn,
    .@{prefix}btn-group + .@{prefix}btn-group {
      margin-left: -1px;
    }
  }
}

// Optional: Group multiple button groups together for a toolbar
.@{prefix}btn-toolbar {
  @{main_prefix} & {
    margin-left: -5px; // Offset the first child's margin
  }
  &:extend(.jvc_bootstrap3 .jvc_clearfix all);

  @{main_prefix} & {
    .@{prefix}btn-group,
    .@{prefix}input-group {
      float: left;
    }
    > .@{prefix}btn,
    > .@{prefix}btn-group,
    > .@{prefix}input-group {
      margin-left: 5px;
    }
  }
}

@{main_prefix}{
  .@{prefix}btn-group > .@{prefix}btn:not(:first-child):not(:last-child):not(.@{prefix}dropdown-toggle) {
    border-radius: 0;
  }

  // Set corners individual because sometimes a single button can be in a .btn-group and we need :first-child and :last-child to both match
  .@{prefix}btn-group > .@{prefix}btn:first-child {
    margin-left: 0;
    &:not(:last-child):not(.dropdown-toggle) {
      .border-right-radius(0);
    }
  }
  // Need .dropdown-toggle since :last-child doesn't apply given a .dropdown-menu immediately after it
  .@{prefix}btn-group > .@{prefix}btn:last-child:not(:first-child),
  .@{prefix}btn-group > .@{prefix}dropdown-toggle:not(:first-child) {
    .border-left-radius(0);
  }

  // Custom edits for including btn-groups within btn-groups (useful for including dropdown buttons within a btn-group)
  .@{prefix}btn-group > .@{prefix}btn-group {
    float: left;
  }
  .@{prefix}btn-group > .@{prefix}btn-group:not(:first-child):not(:last-child) > .@{prefix}btn {
    border-radius: 0;
  }
  .@{prefix}btn-group > .@{prefix}btn-group:first-child:not(:last-child) {
    > .@{prefix}btn:last-child,
    > .@{prefix}dropdown-toggle {
      .border-right-radius(0);
    }
  }
  .@{prefix}btn-group > .@{prefix}btn-group:last-child:not(:first-child) > .@{prefix}btn:first-child {
    .border-left-radius(0);
  }

  // On active and open, don't show outline
  .@{prefix}btn-group .@{prefix}dropdown-toggle:active,
  .@{prefix}btn-group.@{prefix}open .@{prefix}dropdown-toggle {
    outline: 0;
  }
}

@{main_prefix} {
  // Sizing
  //
  // Remix the default button sizing classes into new ones for easier manipulation.

  .@{prefix}btn-group-xs > .@{prefix}btn {&:extend(.jvc_bootstrap3 .jvc_btn-xs);
  }
  .@{prefix}btn-group-sm > .@{prefix}btn { &:extend(.jvc_bootstrap3 .jvc_btn-sm);
  }
  .@{prefix}btn-group-lg > .@{prefix}btn { &:extend(.jvc_bootstrap3 .jvc_btn-lg);
  }

  // Split button dropdowns
  // ----------------------

  // Give the line between buttons some depth
  .@{prefix}btn-group > .@{prefix}btn + .@{prefix}dropdown-toggle {
    padding-left: 8px;
    padding-right: 8px;
  }
  .@{prefix}btn-group > .@{prefix}btn-lg + .@{prefix}dropdown-toggle {
    padding-left: 12px;
    padding-right: 12px;
  }

  // The clickable button for toggling the menu
  // Remove the gradient and set the same inset shadow as the :active state
  .@{prefix}btn-group.@{prefix}open .@{prefix}dropdown-toggle {
    .box-shadow(inset 0 3px 5px rgba(0, 0, 0, .125));

    // Show no shadow for `.btn-link` since it has no other button styles.
    &.@{prefix}btn-link {
      .box-shadow(none);
    }
  }

  // Reposition the caret
  .@{prefix}btn .@{prefix}caret {
    margin-left: 0;
  }
  // Carets in other button sizes
  .@{prefix}btn-lg .@{prefix}caret {
    border-width: @caret-width-large @caret-width-large 0;
    border-bottom-width: 0;
  }
  // Upside down carets for .dropup
  .@{prefix}dropup .@{prefix}btn-lg .@{prefix}caret {
    border-width: 0 @caret-width-large @caret-width-large;
  }
}

  // Vertical button groups
  // ----------------------

.@{prefix}btn-group-vertical {

  @{main_prefix} & {
    > .@{prefix}btn,
    > .@{prefix}btn-group,
    > .@{prefix}btn-group > .@{prefix}btn {
      display: block;
      float: none;
      width: 100%;
      max-width: 100%;
    }
  }

  // Clear floats so dropdown menus can be properly placed
  > .@{prefix}btn-group {
    &:extend(.jvc_bootstrap3 .jvc_clearfix all);

    @{main_prefix} & {
      > .@{prefix}btn {
        float: none;
      }
    }
  }

  @{main_prefix} & {
    > .@{prefix}btn + .@{prefix}btn,
    > .@{prefix}btn + .@{prefix}btn-group,
    > .@{prefix}btn-group + .@{prefix}btn,
    > .@{prefix}btn-group + .@{prefix}btn-group {
      margin-top: -1px;
      margin-left: 0;
    }
  }
}

@{main_prefix} {
  .@{prefix}btn-group-vertical > .@{prefix}btn {
    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }
    &:first-child:not(:last-child) {
      border-top-right-radius: @border-radius-base;
      .border-bottom-radius(0);
    }
    &:last-child:not(:first-child) {
      border-bottom-left-radius: @border-radius-base;
      .border-top-radius(0);
    }
  }
  .@{prefix}btn-group-vertical > .@{prefix}btn-group:not(:first-child):not(:last-child) > .@{prefix}btn {
    border-radius: 0;
  }
  .@{prefix}btn-group-vertical > .@{prefix}btn-group:first-child:not(:last-child) {
    > .@{prefix}btn:last-child,
    > .@{prefix}dropdown-toggle {
      .border-bottom-radius(0);
    }
  }
  .@{prefix}btn-group-vertical > .@{prefix}btn-group:last-child:not(:first-child) > .@{prefix}btn:first-child {
    .border-top-radius(0);
  }

  // Justified button groups
  // ----------------------

  .@{prefix}btn-group-justified {
    display: table;
    width: 100%;
    table-layout: fixed;
    border-collapse: separate;
    > .@{prefix}btn,
    > .@{prefix}btn-group {
      float: none;
      display: table-cell;
      width: 1%;
    }
    > .@{prefix}btn-group .@{prefix}btn {
      width: 100%;
    }

    > .@{prefix}btn-group .@{prefix}dropdown-menu {
      left: auto;
    }
  }

  // Checkbox and radio options
  //
  // In order to support the browser's form validation feedback, powered by the
  // `required` attribute, we have to "hide" the inputs via `clip`. We cannot use
  // `display: none;` or `visibility: hidden;` as that also hides the popover.
  // Simply visually hiding the inputs via `opacity` would leave them clickable in
  // certain cases which is prevented by using `clip` and `pointer-events`.
  // This way, we ensure a DOM element is visible to position the popover from.
  //
  // See https://github.com/twbs/bootstrap/pull/12794 and
  // https://github.com/twbs/bootstrap/pull/14559 for more information.

  [data-toggle="@{prefix}buttons"] {
    > .@{prefix}btn,
    > .@{prefix}btn-group > .@{prefix}btn {
      input[type="radio"],
      input[type="checkbox"] {
        position: absolute;
        clip: rect(0, 0, 0, 0);
        pointer-events: none;
      }
    }
  }
}