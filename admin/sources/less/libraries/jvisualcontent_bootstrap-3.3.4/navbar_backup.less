//
// Navbars
// --------------------------------------------------


// Wrapper and base class
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.@{prefix}navbar {
  @{main_prefix} & {
    position: relative;
    min-height: @navbar-height; // Ensure a navbar always shows (e.g., without a .navbar-brand in collapsed mode)
    margin-bottom: @navbar-margin-bottom;
    border: 1px solid transparent;
  }

  // Prevent floats from breaking the navbar
  &:extend(.jvc_bootstrap3 .jvc_clearfix all);

  @{main_prefix} & {
    @media (min-width: @grid-float-breakpoint) {
      border-radius: @navbar-border-radius;
    }
  }
}


// Navbar heading
//
// Groups `.navbar-brand` and `.navbar-toggle` into a single component for easy
// styling of responsive aspects.

@{main_prefix} & {
  .@{prefix}navbar-header {
    &:extend(.jvc_bootstrap3 .jvc_clearfix all);

      @media (min-width: @grid-float-breakpoint) {
        float: left;
      }
  }
}


// Navbar collapse (body)
//
// Group your navbar content into this for easy collapsing and expanding across
// various device sizes. By default, this content is collapsed when <768px, but
// will expand past that for a horizontal display.
//
// To start (on mobile devices) the navbar links, forms, and buttons are stacked
// vertically and include a `max-height` to overflow in case you have too much
// content for the user's viewport.

@{main_prefix} & {
  .@{prefix}navbar-collapse {
    overflow-x: visible;
    padding-right: @navbar-padding-horizontal;
    padding-left: @navbar-padding-horizontal;
    border-top: 1px solid transparent;
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, .1);
    &:extend(.jvc_bootstrap3 .jvc_clearfix all);
    -webkit-overflow-scrolling: touch;

    &.@{prefix}in {
      overflow-y: auto;
    }
  }
}

@media (min-width: @grid-float-breakpoint) {
  @{main_prefix} & {
    width: auto;
    border-top: 0;
    box-shadow: none;

    &.@{prefix}collapse {
      display: block !important;
      height: auto !important;
      padding-bottom: 0; // Override default setting
      overflow: visible !important;
    }

    &.@{prefix}in {
      overflow-y: visible;
    }
  }

  // Undo the collapse side padding for navbars with containers to ensure
  // alignment of right-aligned contents.
  @{main_prefix} .@{prefix}navbar-fixed-top &,
  @{main_prefix} .@{prefix}navbar-static-top &,
  @{main_prefix} .@{prefix}navbar-fixed-bottom & {
    padding-left: 0;
    padding-right: 0;
  }
}

@{main_prefix} {
  .@{prefix}navbar-fixed-top,
  .@{prefix}navbar-fixed-bottom {
    .@{prefix}navbar-collapse {
      max-height: @navbar-collapse-max-height;

      @media (max-device-width: @screen-xs-min) and (orientation: landscape) {
        max-height: 200px;
      }
    }
  }

  // Both navbar header and collapse
  //
  // When a container is present, change the behavior of the header and collapse.

  .@{prefix}container,
  .@{prefix}container-fluid {
    > .@{prefix}navbar-header,
    > .@{prefix}navbar-collapse {
      margin-right: -@navbar-padding-horizontal;
      margin-left: -@navbar-padding-horizontal;

      @media (min-width: @grid-float-breakpoint) {
        margin-right: 0;
        margin-left: 0;
      }
    }
  }

  //
  // Navbar alignment options
  //
  // Display the navbar across the entirety of the page or fixed it to the top or
  // bottom of the page.

  // Static top (unfixed, but 100% wide) navbar
  .@{prefix}navbar-static-top {
    z-index: @zindex-navbar;
    border-width: 0 0 1px;

    @media (min-width: @grid-float-breakpoint) {
      border-radius: 0;
    }
  }

  // Fix the top/bottom navbars when screen real estate supports it
  .@{prefix}navbar-fixed-top,
  .@{prefix}navbar-fixed-bottom {
    position: fixed;
    right: 0;
    left: 0;
    z-index: @zindex-navbar-fixed;

    // Undo the rounded corners
    @media (min-width: @grid-float-breakpoint) {
      border-radius: 0;
    }
  }
  .@{prefix}navbar-fixed-top {
    top: 0;
    border-width: 0 0 1px;
  }
  .@{prefix}navbar-fixed-bottom {
    bottom: 0;
    margin-bottom: 0; // override .navbar defaults
    border-width: 1px 0 0;
  }
}


// Brand/project name

.@{prefix}navbar-brand {
  @{main_prefix} & {
    float: left;
    padding: @navbar-padding-vertical @navbar-padding-horizontal;
    font-size: @font-size-large;
    line-height: @line-height-computed;
    height: @navbar-height;

    &:hover,
    &:focus {
      text-decoration: none;
    }

    > img {
      display: block;
    }
  }

  @media (min-width: @grid-float-breakpoint) {
    @{main_prefix} .@{prefix}navbar > .@{prefix}container &,
    @{main_prefix} .@{prefix}navbar > .@{prefix}container-fluid & {
      margin-left: -@navbar-padding-horizontal;
    }
  }
}

@{main_prefix} {
  // Navbar toggle
  //
  // Custom button for toggling the `.navbar-collapse`, powered by the collapse
  // JavaScript plugin.

  .@{prefix}navbar-toggle {
    position: relative;
    float: right;
    margin-right: @navbar-padding-horizontal;
    padding: 9px 10px;
    .navbar-vertical-align(34px);
    background-color: transparent;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: 1px solid transparent;
    border-radius: @border-radius-base;

    // We remove the `outline` here, but later compensate by attaching `:hover`
    // styles to `:focus`.
    &:focus {
      outline: 0;
    }

    // Bars
    .@{prefix}icon-bar {
      display: block;
      width: 22px;
      height: 2px;
      border-radius: 1px;
    }
    .@{prefix}icon-bar + .@{prefix}icon-bar {
      margin-top: 4px;
    }

    @media (min-width: @grid-float-breakpoint) {
      display: none;
    }
  }

  // Navbar nav links
  //
  // Builds on top of the `.nav` components with its own modifier class to make
  // the nav the full height of the horizontal nav (above 768px).

  .@{prefix}navbar-nav {
    margin: (@navbar-padding-vertical / 2) -@navbar-padding-horizontal;

    > li > a {
      padding-top: 10px;
      padding-bottom: 10px;
      line-height: @line-height-computed;
    }

    @media (max-width: @grid-float-breakpoint-max) {
      // Dropdowns get custom display when collapsed
      .@{prefix}open .@{prefix}dropdown-menu {
        position: static;
        float: none;
        width: auto;
        margin-top: 0;
        background-color: transparent;
        border: 0;
        box-shadow: none;
        > li > a,
        .@{prefix}dropdown-header {
          padding: 5px 15px 5px 25px;
        }
        > li > a {
          line-height: @line-height-computed;
          &:hover,
          &:focus {
            background-image: none;
          }
        }
      }
    }

    // Uncollapse the nav
    @media (min-width: @grid-float-breakpoint) {
      float: left;
      margin: 0;

      > li {
        float: left;
        > a {
          padding-top: @navbar-padding-vertical;
          padding-bottom: @navbar-padding-vertical;
        }
      }
    }
  }

  // Navbar form
  //
  // Extension of the `.form-inline` with some extra flavor for optimum display in
  // our navbars.

  .@{prefix}navbar-form {
    margin-left: -@navbar-padding-horizontal;
    margin-right: -@navbar-padding-horizontal;
    padding: 10px @navbar-padding-horizontal;
    border-top: 1px solid transparent;
    border-bottom: 1px solid transparent;
    @shadow: inset 0 1px 0 rgba(255, 255, 255, .1), 0 1px 0 rgba(255, 255, 255, .1);
    .box-shadow(@shadow);

    // Mixin behavior for optimum display
    .form-inline();

    .@{prefix}form-group {
      @media (max-width: @grid-float-breakpoint-max) {
        margin-bottom: 5px;

        &:last-child {
          margin-bottom: 0;
        }
      }
    }

    // Vertically center in expanded, horizontal navbar
    .navbar-vertical-align(@input-height-base);

    // Undo 100% width for pull classes
    @media (min-width: @grid-float-breakpoint) {
      width: auto;
      border: 0;
      margin-left: 0;
      margin-right: 0;
      padding-top: 0;
      padding-bottom: 0;
      .box-shadow(none);
    }
  }

  // Dropdown menus

  // Menu position and menu carets
  .@{prefix}navbar-nav > li > .@{prefix}dropdown-menu {
    margin-top: 0;
    .border-top-radius(0);
  }
  // Menu position and menu caret support for dropups via extra dropup class
  .@{prefix}navbar-fixed-bottom .@{prefix}navbar-nav > li > .@{prefix}dropdown-menu {
    margin-bottom: 0;
    .border-top-radius(@navbar-border-radius);
    .border-bottom-radius(0);
  }

  // Buttons in navbars
  //
  // Vertically center a button within a navbar (when *not* in a form).

  .@{prefix}navbar-btn {
    .navbar-vertical-align(@input-height-base);

    &.@{prefix}btn-sm {
      .navbar-vertical-align(@input-height-small);
    }
    &.@{prefix}btn-xs {
      .navbar-vertical-align(22);
    }
  }

  // Text in navbars
  //
  // Add a class to make any element properly align itself vertically within the navbars.

  .@{prefix}navbar-text {
    .navbar-vertical-align(@line-height-computed);

    @media (min-width: @grid-float-breakpoint) {
      float: left;
      margin-left: @navbar-padding-horizontal;
      margin-right: @navbar-padding-horizontal;
    }
  }

  // Component alignment
  //
  // Repurpose the pull utilities as their own navbar utilities to avoid specificity
  // issues with parents and chaining. Only do this when the navbar is uncollapsed
  // though so that navbar contents properly stack and align in mobile.
  //
  // Declared after the navbar components to ensure more specificity on the margins.

  @media (min-width: @grid-float-breakpoint) {
    .@{prefix}navbar-left {
      .pull-left();
    }

    .@{prefix}navbar-right {
      .pull-right();
      margin-right: -@navbar-padding-horizontal;

      ~ .@{prefix}navbar-right {
        margin-right: 0;
      }
    }
  }
}

// Alternate navbars
// --------------------------------------------------

// Default navbar
.@{prefix}navbar-default {
  @{main_prefix} & {
    background-color: @navbar-default-bg;
    border-color: @navbar-default-border;

    .@{prefix}navbar-brand {
      color: @navbar-default-brand-color;
      &:hover,
      &:focus {
        color: @navbar-default-brand-hover-color;
        background-color: @navbar-default-brand-hover-bg;
      }
    }

    .@{prefix}navbar-text {
      color: @navbar-default-color;
    }

    .@{prefix}navbar-nav {
      > li > a {
        color: @navbar-default-link-color;

        &:hover,
        &:focus {
          color: @navbar-default-link-hover-color;
          background-color: @navbar-default-link-hover-bg;
        }
      }
      > .@{prefix}active > a {
        &,
        &:hover,
        &:focus {
          color: @navbar-default-link-active-color;
          background-color: @navbar-default-link-active-bg;
        }
      }
      > .@{prefix}disabled > a {
        &,
        &:hover,
        &:focus {
          color: @navbar-default-link-disabled-color;
          background-color: @navbar-default-link-disabled-bg;
        }
      }
    }

    .@{prefix}navbar-toggle {
      border-color: @navbar-default-toggle-border-color;
      &:hover,
      &:focus {
        background-color: @navbar-default-toggle-hover-bg;
      }
      .@{prefix}icon-bar {
        background-color: @navbar-default-toggle-icon-bar-bg;
      }
    }

    .@{prefix}navbar-collapse,
    .@{prefix}navbar-form {
      border-color: @navbar-default-border;
    }

    // Dropdown menu items
    .@{prefix}navbar-nav {
      // Remove background color from open dropdown
      > .@{prefix}open > a {
        &,
        &:hover,
        &:focus {
          background-color: @navbar-default-link-active-bg;
          color: @navbar-default-link-active-color;
        }
      }

      @media (max-width: @grid-float-breakpoint-max) {
        // Dropdowns get custom display when collapsed
        .@{prefix}open .@{prefix}dropdown-menu {
          > li > a {
            color: @navbar-default-link-color;
            &:hover,
            &:focus {
              color: @navbar-default-link-hover-color;
              background-color: @navbar-default-link-hover-bg;
            }
          }
          > .@{prefix}active > a {
            &,
            &:hover,
            &:focus {
              color: @navbar-default-link-active-color;
              background-color: @navbar-default-link-active-bg;
            }
          }
          > .@{prefix}disabled > a {
            &,
            &:hover,
            &:focus {
              color: @navbar-default-link-disabled-color;
              background-color: @navbar-default-link-disabled-bg;
            }
          }
        }
      }
    }

    // Links in navbars
    //
    // Add a class to ensure links outside the navbar nav are colored correctly.

    .@{prefix}navbar-link {
      color: @navbar-default-link-color;
      &:hover {
        color: @navbar-default-link-hover-color;
      }
    }
  }

  .@{prefix}btn-link {
    @{main_prefix} & {
      color: @navbar-default-link-color;
      &:hover,
      &:focus {
        color: @navbar-default-link-hover-color;
      }
    }
    @{main_prefix} &[disabled],
    @{main_prefix} fieldset[disabled] & {
      &:hover,
      &:focus {
        color: @navbar-default-link-disabled-color;
      }
    }
  }
}

// Inverse navbar

.@{prefix}navbar-inverse {
  @{main_prefix} & {
    background-color: @navbar-inverse-bg;
    border-color: @navbar-inverse-border;

    .@{prefix}navbar-brand {
      color: @navbar-inverse-brand-color;
      &:hover,
      &:focus {
        color: @navbar-inverse-brand-hover-color;
        background-color: @navbar-inverse-brand-hover-bg;
      }
    }

    .@{prefix}navbar-text {
      color: @navbar-inverse-color;
    }

    .@{prefix}navbar-nav {
      > li > a {
        color: @navbar-inverse-link-color;

        &:hover,
        &:focus {
          color: @navbar-inverse-link-hover-color;
          background-color: @navbar-inverse-link-hover-bg;
        }
      }
      > .@{prefix}active > a {
        &,
        &:hover,
        &:focus {
          color: @navbar-inverse-link-active-color;
          background-color: @navbar-inverse-link-active-bg;
        }
      }
      > .@{prefix}disabled > a {
        &,
        &:hover,
        &:focus {
          color: @navbar-inverse-link-disabled-color;
          background-color: @navbar-inverse-link-disabled-bg;
        }
      }
    }

    // Darken the responsive nav toggle
    .@{prefix}navbar-toggle {
      border-color: @navbar-inverse-toggle-border-color;
      &:hover,
      &:focus {
        background-color: @navbar-inverse-toggle-hover-bg;
      }
      .@{prefix}icon-bar {
        background-color: @navbar-inverse-toggle-icon-bar-bg;
      }
    }

    .@{prefix}navbar-collapse,
    .@{prefix}navbar-form {
      border-color: darken(@navbar-inverse-bg, 7%);
    }

    // Dropdowns
    .@{prefix}navbar-nav {
      > .@{prefix}open > a {
        &,
        &:hover,
        &:focus {
          background-color: @navbar-inverse-link-active-bg;
          color: @navbar-inverse-link-active-color;
        }
      }

      @media (max-width: @grid-float-breakpoint-max) {
        // Dropdowns get custom display
        .@{prefix}open .@{prefix}dropdown-menu {
          > .@{prefix}dropdown-header {
            border-color: @navbar-inverse-border;
          }
          .@{prefix}divider {
            background-color: @navbar-inverse-border;
          }
          > li > a {
            color: @navbar-inverse-link-color;
            &:hover,
            &:focus {
              color: @navbar-inverse-link-hover-color;
              background-color: @navbar-inverse-link-hover-bg;
            }
          }
          > .@{prefix}active > a {
            &,
            &:hover,
            &:focus {
              color: @navbar-inverse-link-active-color;
              background-color: @navbar-inverse-link-active-bg;
            }
          }
          > .@{prefix}disabled > a {
            &,
            &:hover,
            &:focus {
              color: @navbar-inverse-link-disabled-color;
              background-color: @navbar-inverse-link-disabled-bg;
            }
          }
        }
      }
    }

    .@{prefix}navbar-link {
      color: @navbar-inverse-link-color;
      &:hover {
        color: @navbar-inverse-link-hover-color;
      }
    }
  }

  .@{prefix}btn-link {
    @{main_prefix} & {
      color: @navbar-inverse-link-color;
      &:hover,
      &:focus {
        color: @navbar-inverse-link-hover-color;
      }
    }
    @{main_prefix} &[disabled],
    @{main_prefix} fieldset[disabled] & {
      &:hover,
      &:focus {
        color: @navbar-inverse-link-disabled-color;
      }
    }
  }
}